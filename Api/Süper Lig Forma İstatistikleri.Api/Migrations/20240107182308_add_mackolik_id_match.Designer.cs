// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Süper_Lig_Forma_İstatistikleri.Api.Context;

#nullable disable

namespace Süper_Lig_Forma_İstatistikleri.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240107182308_add_mackolik_id_match")]
    partial class add_mackolik_id_match
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Süper_Lig_Forma_İstatistikleri.Entities.Entities.Jersey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsKeeper")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shorts")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Socks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Jersey");
                });

            modelBuilder.Entity("Süper_Lig_Forma_İstatistikleri.Entities.Entities.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AwayMS")
                        .HasColumnType("int");

                    b.Property<int>("AwayTeamId")
                        .HasColumnType("int");

                    b.Property<int?>("AwayTeamJerseyGKId")
                        .HasColumnType("int");

                    b.Property<int?>("AwayTeamJerseyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HomeMS")
                        .HasColumnType("int");

                    b.Property<int>("HomeTeamId")
                        .HasColumnType("int");

                    b.Property<int?>("HomeTeamJerseyGKId")
                        .HasColumnType("int");

                    b.Property<int?>("HomeTeamJerseyId")
                        .HasColumnType("int");

                    b.Property<int>("MainId")
                        .HasColumnType("int");

                    b.Property<int?>("Maçkolik")
                        .HasColumnType("int");

                    b.Property<int?>("RefereeId")
                        .HasColumnType("int");

                    b.Property<int?>("RefereeJerseyId")
                        .HasColumnType("int");

                    b.Property<int>("Week")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AwayTeamId");

                    b.HasIndex("AwayTeamJerseyGKId");

                    b.HasIndex("AwayTeamJerseyId");

                    b.HasIndex("HomeTeamId");

                    b.HasIndex("HomeTeamJerseyGKId");

                    b.HasIndex("HomeTeamJerseyId");

                    b.HasIndex("RefereeId");

                    b.HasIndex("RefereeJerseyId");

                    b.ToTable("Match");
                });

            modelBuilder.Entity("Süper_Lig_Forma_İstatistikleri.Entities.Entities.Referee", b =>
                {
                    b.Property<int>("RefereeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RefereeId"));

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFifa")
                        .HasColumnType("bit");

                    b.Property<string>("RefereeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RefereeId");

                    b.ToTable("Referee");
                });

            modelBuilder.Entity("Süper_Lig_Forma_İstatistikleri.Entities.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("Süper_Lig_Forma_İstatistikleri.Entities.Entities.Jersey", b =>
                {
                    b.HasOne("Süper_Lig_Forma_İstatistikleri.Entities.Entities.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Süper_Lig_Forma_İstatistikleri.Entities.Entities.Match", b =>
                {
                    b.HasOne("Süper_Lig_Forma_İstatistikleri.Entities.Entities.Team", "AwayTeam")
                        .WithMany()
                        .HasForeignKey("AwayTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Süper_Lig_Forma_İstatistikleri.Entities.Entities.Jersey", "AwayTeamJerseyGK")
                        .WithMany()
                        .HasForeignKey("AwayTeamJerseyGKId");

                    b.HasOne("Süper_Lig_Forma_İstatistikleri.Entities.Entities.Jersey", "AwayTeamJersey")
                        .WithMany()
                        .HasForeignKey("AwayTeamJerseyId");

                    b.HasOne("Süper_Lig_Forma_İstatistikleri.Entities.Entities.Team", "HomeTeam")
                        .WithMany()
                        .HasForeignKey("HomeTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Süper_Lig_Forma_İstatistikleri.Entities.Entities.Jersey", "HomeTeamJerseyGK")
                        .WithMany()
                        .HasForeignKey("HomeTeamJerseyGKId");

                    b.HasOne("Süper_Lig_Forma_İstatistikleri.Entities.Entities.Jersey", "HomeTeamJersey")
                        .WithMany()
                        .HasForeignKey("HomeTeamJerseyId");

                    b.HasOne("Süper_Lig_Forma_İstatistikleri.Entities.Entities.Referee", "Referee")
                        .WithMany("Match")
                        .HasForeignKey("RefereeId");

                    b.HasOne("Süper_Lig_Forma_İstatistikleri.Entities.Entities.Jersey", "RefereeJersey")
                        .WithMany()
                        .HasForeignKey("RefereeJerseyId");

                    b.Navigation("AwayTeam");

                    b.Navigation("AwayTeamJersey");

                    b.Navigation("AwayTeamJerseyGK");

                    b.Navigation("HomeTeam");

                    b.Navigation("HomeTeamJersey");

                    b.Navigation("HomeTeamJerseyGK");

                    b.Navigation("Referee");

                    b.Navigation("RefereeJersey");
                });

            modelBuilder.Entity("Süper_Lig_Forma_İstatistikleri.Entities.Entities.Referee", b =>
                {
                    b.Navigation("Match");
                });
#pragma warning restore 612, 618
        }
    }
}
